@import 'sizes';

// Generates spacing for each spacing size and direction
@mixin _spacingDir($direction, $space) {
  margin-#{$direction}: $space;
}

@mixin _spacing($spaceName, $space) {
  &__#{$spaceName} {
    &--top {
      @include _spacingDir(top, $space);
    }
    &--right {
      @include _spacingDir(right, $space);
    }
    &--bottom {
      @include _spacingDir(bottom, $space);
    }
    &--left {
      @include _spacingDir(left, $space);
    }
  }
}

// Generated class format:
// .gc-space__<size>--<side>
// e.g.: .gc-space__tiny--top
.gc-space {
  @include _spacing(tiny, $SizeTiny);
  @include _spacing(small, $SizeSmall);
  @include _spacing(regular, $SizeRegular);
  @include _spacing(medium, $SizeMedium);
  @include _spacing(large, $SizeLarge);
  @include _spacing(veryLarge, $SizeVeryLarge);
  @include _spacing(extraLarge, $SizeExtraLarge);
}

// Classes for flex alignment
// Class format:
// .flex-<(h)orizontal | (v)ertical>__<alignment>
// e.g.: .flex-h__sp-ard
.flex {
  &-h__ {
    &left {
      justify-content: flex-start;
    }
    &center {
      justify-content: center;
    }
    &sp-btw {
      justify-content: space-between;
    }
    &sp-ard {
      justify-content: space-around;
    }
    &right {
      justify-content: flex-end;
    }
  }

  &-v__ {
    &top {
      align-items: flex-start;
    }
    &center {
      align-items: center;
    }
    &stretch {
      align-items: stretch;
    }
    &bottom {
      align-items: flex-end;
    }
  }
}
